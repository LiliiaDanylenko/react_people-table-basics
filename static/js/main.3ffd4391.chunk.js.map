{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","PeoplePage","useState","people","setPeople","error","setError","loading","setLoading","slugParams","useParams","slug","useEffect","fetch","then","res","json","gettedPeople","map","person","findedMother","find","findMother","motherName","name","findedFather","findFather","fatherName","mother","father","catch","finally","length","sex","born","died","classNames","href","NotFoundPage","getLinkClass","isActive","App","role","to","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3ffd4391.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { slug: slugParams } = useParams();\n\n  useEffect(() => {\n    setError(false);\n    setLoading(true);\n    fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n      .then(res => res.json())\n      .then(gettedPeople => setPeople(gettedPeople.map((person: Person) => {\n        const findedMother = gettedPeople\n          .find((findMother: Person) => (\n            person.motherName === findMother.name\n          )) || null;\n\n        const findedFather = gettedPeople\n          .find((findFather: Person) => (\n            person.fatherName === findFather.name\n          )) || null;\n\n        return { ...person, mother: findedMother, father: findedFather };\n      })))\n      .catch(() => setError(true))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && (<Loader />)}\n\n          {error && !loading && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!error && !loading && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!error && !loading && people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => {\n                  const {\n                    name, sex, born, died, fatherName, motherName, slug,\n                    mother, father,\n                  } = person;\n\n                  return (\n                    <tr\n                      key={name}\n                      data-cy=\"person\"\n                      className={classNames(\n                        {\n                          'has-background-warning':\n                            slugParams === person.slug,\n                        },\n                      )}\n                    >\n                      <td>\n                        <a\n                          className={classNames(\n                            { 'has-text-danger': sex === 'f' },\n                          )}\n                          href={`#/people/${slug}`}\n                        >\n                          {name}\n                        </a>\n                      </td>\n\n                      <td>{sex}</td>\n                      <td>{born}</td>\n                      <td>{died}</td>\n                      {!motherName && (<td>-</td>)}\n\n                      {motherName && !mother && (\n                        <td>\n                          {motherName}\n                        </td>\n                      )}\n\n                      {motherName && mother && (\n                        <td>\n                          <a\n                            className=\"has-text-danger\"\n                            href={`#/people/${mother.slug}`}\n                          >\n                            {motherName}\n                          </a>\n                        </td>\n                      )}\n\n                      {!fatherName && (<td>-</td>)}\n\n                      {fatherName && !father && (\n                        <td>\n                          {fatherName}\n                        </td>\n                      )}\n\n                      {fatherName && father && (\n                        <td>\n                          <a\n                            href={`#/people/${father.slug}`}\n                          >\n                            {fatherName}\n                          </a>\n                        </td>\n                      )}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  NavLink, Routes, Route, Navigate,\n} from 'react-router-dom';\n\nimport classNames from 'classnames';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink className={getLinkClass} to=\"/people\">\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" />} />\n          <Route path=\"people\" element={<PeoplePage />} />\n          <Route path=\"people/:slug\" element={<PeoplePage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}